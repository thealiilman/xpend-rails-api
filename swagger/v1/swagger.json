{
  "swagger": "2.0",
  "info": {
    "title": "xpend API"
  },
  "basePath": "/api",
  "paths": {
    "/login": {
      "post": {
        "summary": "Create a JSON Web Token for the user",
        "tags": [
          "Authentications"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "creates a JSON Web Token for the user"
          },
          "400": {
            "description": "returns user credentials are invalid error"
          }
        }
      }
    },
    "/expense_categories": {
      "get": {
        "summary": "Fetch all expense categories",
        "tags": [
          "Expense Categories"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns all expense categories"
          }
        }
      }
    },
    "/expenses": {
      "post": {
        "summary": "Create an expense",
        "tags": [
          "Expenses"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "expense",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "amount_cents": {
                  "type": "integer"
                },
                "amount_currency": {
                  "type": "string",
                  "enum": "EUR"
                },
                "expense_category_id": {
                  "type": "integer"
                }
              },
              "required": [
                "title",
                "amount_cents",
                "user_id",
                "expense_category_id"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "returns created expense"
          },
          "422": {
            "description": "returns unprocessable entity error"
          }
        }
      },
      "get": {
        "summary": "All expenses of the user",
        "tags": [
          "Expenses"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "currency",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SKK",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XTS",
              "YER",
              "ZAR",
              "ZMK",
              "ZMW",
              "BCH",
              "BTC",
              "JEP",
              "GGP",
              "IMP",
              "XFU",
              "GBX",
              "CNH",
              "EEK",
              "GHC",
              "LTL",
              "LVL",
              "MRO",
              "MTL",
              "TMM",
              "YEN",
              "ZWD",
              "ZWL",
              "ZWN",
              "ZWR",
              "VEF"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "returns all expenses of the user"
          }
        }
      }
    },
    "/expenses/{expense_id}": {
      "delete": {
        "summary": "Destroy an expense",
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "expense_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns ok"
          }
        }
      },
      "put": {
        "summary": "Update an expense",
        "tags": [
          "Expenses"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "expense_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "expense",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "amount_cents": {
                  "type": "integer"
                },
                "amount_currency": {
                  "type": "string"
                },
                "user_id": {
                  "type": "integer"
                },
                "expense_category_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns updated expense"
          },
          "422": {
            "description": "returns unprocessable entity error"
          }
        }
      }
    },
    "/forgot_password": {
      "post": {
        "summary": "User requests for a password reset",
        "tags": [
          "Passwords"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user successfully requests for a password reset"
          },
          "404": {
            "description": "returns error when user does not exist"
          }
        }
      }
    },
    "/reset_password": {
      "post": {
        "summary": "User resets their password",
        "tags": [
          "Passwords"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "new_password",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "reset_password_digest",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "resets password of the user"
          },
          "400": {
            "description": "returns error"
          }
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "Create a user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "given_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "given_name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "returns the created user"
          },
          "422": {
            "description": "returns unprocessable entity error"
          }
        }
      }
    },
    "/user": {
      "delete": {
        "summary": "Deactivate user account",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns ok"
          }
        }
      },
      "get": {
        "summary": "Get user",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns ok"
          }
        }
      },
      "put": {
        "summary": "Update user's given_name and email",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "given_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns updated user"
          },
          "400": {
            "description": "returns invalid password error"
          },
          "422": {
            "description": "returns error if value is not unique"
          }
        }
      }
    }
  }
}